name: Build and test

on:
  workflow_call:
    inputs:
      lint-packages:
        description: "Names of the Python packages to be linted"
        type: string
      mypy:
        description: "Check types with mypy"
        default: true
        type: boolean
      mypy-arguments:
        description: "Additional arguments to mypy"
        default: ""
        type: string
      python-version:
        description: "Python version to use"
        default: "3.10"
        type: string
      test-command:
        description: "Command to run the unit tests"
        default: python -m unittest -v
        type: string

jobs:
  linting:
    name: Linting
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Install and check with black, pylint and pontos.version
        uses: greenbone/actions/lint-python@v2
        with:
          packages: ${{ inputs.lint-packages }}
          python-version: ${{ inputs.python-version }}
          cache: "true"

  test:
    name: Run all tests
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Install python, poetry and dependencies
        uses: greenbone/actions/poetry@v2
        with:
          python-version: ${{ inputs.python-version }}
          cache: "true"
          cache-poetry-installation: "true"
      - name: Run unit tests
        run: poetry run ${{ inputs.test-command }}

  check-version:
    name: Check versioning for consistency
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Install python, poetry and dependencies
        uses: greenbone/actions/poetry@v2
        with:
          cache: "true"
          cache-poetry-installation: "true"
      - name: Check version
        run: |
          poetry run pontos-version verify current

  mypy:
    name: Check type information
    if: inputs.mypy
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Run mypy
        uses: greenbone/actions/mypy-python@v2
        with:
          mypy-arguments: ${{ inputs.mypy-arguments }}
          python-version: ${{ inputs.python-version }}
