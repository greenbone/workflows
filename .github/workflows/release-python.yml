name: Release Python package

on:
  workflow_call:
    inputs:
      git-tag-prefix:
        description: "Set git tag prefix to the passed input. Default: ''"
        default: "v"
        type: string
      release-type:
        default: "calendar"
        type: string
    secrets:
      GREENBONE_BOT:
        required: true
      GREENBONE_BOT_MAIL:
        required: true
      GREENBONE_BOT_TOKEN:
        required: true
      GPG_KEY:
        required: false
      GPG_FINGERPRINT:
        required: false
      GPG_PASSPHRASE:
        required: false


jobs:
  build-and-release:
    name: Create a new release
    # If the event is a workflow_dispatch or the label 'make release' is set and PR is closed because of a merge
    if: (github.event_name == 'workflow_dispatch') || (contains( github.event.pull_request.labels.*.name, 'make release') && github.event.pull_request.merged == true)
    runs-on: "ubuntu-latest"
    steps:
      - name: Setting the Reference
        id: ref
        run: |
          if [[ "${{ github.event_name }}" = "workflow_dispatch" ]]; then
            echo "release_ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "release_ref=${{ github.base_ref }}" >> $GITHUB_OUTPUT
          fi
      - name: Release with release action
        uses: greenbone/actions/release@v2
        with:
          git-tag-prefix: ${{ inputs.git-tag-prefix }}
          github-user: ${{ secrets.GREENBONE_BOT }}
          github-user-mail: ${{ secrets.GREENBONE_BOT_MAIL }}
          github-user-token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          gpg-key: ${{ secrets.GPG_KEY }}
          gpg-fingerprint: ${{ secrets.GPG_FINGERPRINT }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          release-type: ${{ inputs.release-type }}
          ref: ${{ steps.ref.outputs.release_ref }}
